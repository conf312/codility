This is a demo task.

Write a function:

class Solution { public int solution(int[] A); }

that, given an array A of N integers, returns the smallest positive integer (greater than 0) that does not occur in A.

For example, given A = [1, 3, 6, 4, 1, 2], the function should return 5.

Given A = [1, 2, 3], the function should return 4.

Given A = [−1, −3], the function should return 1.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [1..100,000];
each element of array A is an integer within the range [−1,000,000..1,000,000].

==================================================================================

이것은 데모 작업입니다.

함수 쓰기:

클래스 솔루션 {public int 솔루션(int[] A); }

즉, 배열 A에 N개의 정수가 주어지면 A에 없는 가장 작은 양의 정수(0보다 큼)를 반환합니다.

예를 들어, A = [1, 3, 6, 4, 1, 2]일 때 함수는 5를 반환해야 합니다.

A = [1, 2, 3]이 주어지면 함수는 4를 반환해야 합니다.

A = [-1, -3]이 주어지면 함수는 1을 반환해야 합니다.

다음 가정을 위한 효율적인 알고리즘을 작성하십시오.

N은 [1..] 범위 내의 정수입니다. 100,000];
배열 A의 각 요소는 [-1,000,000..1,000,000] 범위 내의 정수입니다.