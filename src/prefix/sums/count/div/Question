Write a function:

class Solution { public int solution(int A, int B, int K); }

that, given three integers A, B and K, returns the number of integers
within the range [A..B] that are divisible by K, i.e.:

{ i : A ≤ i ≤ B, i mod K = 0 }

For example, for A = 6, B = 11 and K = 2, your function should return 3,
because there are three numbers divisible by 2 within the
range [6..11], namely 6, 8 and 10.

Write an efficient algorithm for the following assumptions:

A and B are integers within the range [0..2,000,000,000];
K is an integer within the range [1..2,000,000,000];
A ≤ B.

=================================================================

함수를 작성합니다.

클래스 솔루션 {public int 솔루션(int A, int B, int K);}

이 값은 세 개의 정수 A, B 및 K를 지정하면 [A] 범위 내의 정수 수를 반환합니다.B]
즉, 다음과 같이 K로 나눌 수 있다.

{ i : A 、 i 、 B 、 i mod K = 0 }

예를 들어, A = 6, B = 11 및 K = 2의 경우,
[6.11] 범위 내에 2로 나누어질 수 있는 세 개의 숫자,
즉 6, 8, 10이 있기 때문에 함수는 3을 반환해야 합니다.

다음의 전제 조건에 대해서, 효율적인 알고리즘을 작성합니다.

A와 B는 [0..2,000,000] 범위의 정수이다.
K는 [1..2,000,000] 범위의 정수입니다.
A b B