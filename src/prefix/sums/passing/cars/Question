A non-empty array A consisting of N integers is given. The consecutive elements of array A represent consecutive cars on a road.

Array A contains only 0s and/or 1s:

0 represents a car traveling east,
1 represents a car traveling west.
The goal is to count passing cars. We say that a pair of cars (P, Q), where 0 ≤ P < Q < N, is passing when P is traveling to the east and Q is traveling to the west.

For example, consider array A such that:

  A[0] = 0
  A[1] = 1
  A[2] = 0
  A[3] = 1
  A[4] = 1
We have five pairs of passing cars: (0, 1), (0, 3), (0, 4), (2, 3), (2, 4).

Write a function:

class Solution { public int solution(int[] A); }

that, given a non-empty array A of N integers, returns the number of pairs of passing cars.

The function should return −1 if the number of pairs of passing cars exceeds 1,000,000,000.

For example, given:

  A[0] = 0
  A[1] = 1
  A[2] = 0
  A[3] = 1
  A[4] = 1
the function should return 5, as explained above.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [1..100,000];
each element of array A is an integer that can have one of the following values: 0, 1.

======================================================================================

N개의 정수로 이루어진 비어 있지 않은 배열 A가 주어진다.
배열 A의 연속 요소는 도로 위의 연속된 차량을 나타냅니다.

어레이 A에는 0 및/또는 1만 포함됩니다.

0은 동쪽으로 이동하는 차를 나타냅니다.
1은 서쪽으로 이동하는 차를 나타냅니다.
목표는 지나가는 차를 세는 것이다.

P가 동쪽으로 이동하고(0)
Q가 서쪽으로 이동(1)할 때
0 µP < Q < N의 한 쌍의 차량(P, Q)이 통과한다고 합니다.

예를 들어 다음과 같은 어레이 A를 고려합니다.

  A[0] = 0
  A[1] = 1
  A[2] = 0
  A[3] = 1
  A[4] = 1
지나가는 차량은 (0, 1), (0, 3), (0, 4), (2, 3), (2, 4) 다섯 쌍이 있습니다.

함수를 작성합니다.

클래스 솔루션 { public int 솔루션(int[] A), }

즉, N개의 정수로 구성된 배열 A가 비어 있지 않을 경우 통과 차량의 쌍 수를 반환합니다.

이 함수는 지나가는 차량의 쌍 수가 1,000,000개를 초과할 경우 -1을 반환해야 합니다.

예를 들어 다음과 같습니다.

  A[0] = 0
  A[1] = 1
  A[2] = 0
  A[3] = 1
  A[4] = 1
위에서 설명한 바와 같이 함수는 5를 반환해야 합니다.

다음의 전제 조건에 대해서, 효율적인 알고리즘을 작성합니다.

N은 [1] 범위의 정수입니다.100,000];
배열 A의 각 요소는 0, 1 중 하나의 값을 가질 수 있는 정수입니다.